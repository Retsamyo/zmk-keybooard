/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |
            bindings = <
&kp KP_ESC   &kp KP_N1 &kp KP_N2   &kp KP_N3   &kp KP_N4   &kp KP_N5  &mo 2          
&kp KP_TAB   &kp KP_Q  &kp KP_W    &kp KP_E    &kp KP_R    &kp KP_T           
&kp KP_LSHFT &kp KP_A  &kp KP_S    &kp KP_D    &kp KP_F    &kp KP_G           
&kp KP_LCTRL &kp KP_Z  &kp KP_X    &kp KP_C    &kp KP_V    &kp KP_B   
                 &kp KP_LALT &kp KP_LGUI &mo 1    &kp KP_SPACE
            >;
        };

        lower_layer {
// ------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
// |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
// |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
// |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
//                     |      |      |      |        |  |       |      |       |       |
            bindings = <
&bt BT_CLR &bt BT_SEL 0     &bt BT_SEL 1      &bt BT_SEL 2     
&kp KP_F1     &kp KP_F2           &kp KP_F3            &kp KP_F4           
&kp KP_GRAVE  &kp KP_EXCL         &kp KP_AT            &kp KP_HASH         
&trans     &ext_power EP_ON &ext_power EP_OFF &ext_power EP_TOG
                                              &trans           
            >;

        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
// |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
// |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
//                     |      |      |      |        |  |       |      |       |       |
            bindings = <
&trans    &trans &trans &trans  &trans  &trans           
&kp KP_GRAVE &kp KP_N1 &kp KP_N2 &kp KP_N3  &kp KP_N4  &kp KP_N5           
&kp KP_F1    &kp KP_F2 &kp KP_F3 &kp KP_F4  &kp KP_F5  &kp KP_F6           
&kp KP_F7    &kp KP_F8 &kp KP_F9 &kp KP_F10 &kp KP_F11 &kp KP_F12   &trans 
                        &trans  &trans  &trans    &trans 
            >;
        };
    };
};
